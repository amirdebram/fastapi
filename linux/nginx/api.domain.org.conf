# Upstream block with keepalive and max connections
upstream fastapi {
    server unix:/var/www/api/run/gunicorn.sock;
}

# Log Formats
log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

access_log /var/www/api/logs/nginx_access.log main;
error_log /var/www/api/logs/nginx_error.log warn;

server {
    server_name api.domain.org;

    location / {
        proxy_http_version 1.1;
        proxy_pass http://localhost:3000;  # Nitro server runs on port 3000 by default
        
        proxy_cache_bypass $http_upgrade;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
    }

    listen 443 ssl; # managed by Certbot
}

server {
    listen 8081 ssl;
    server_name api.domain.org;
    client_max_body_size 10M;

    # Proxy settings
    location / {        
        proxy_http_version 1.1;
        proxy_pass http://fastapi;
        
        proxy_request_buffering off;
        proxy_buffering on;
        proxy_buffers 16 16k;
        proxy_buffer_size 32k;

        proxy_connect_timeout 300s;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Connection "";
    }

    # Error pages
    error_page 502 /502.html;
    location = /502.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
}

server {
    if ($host = api.domain.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name api.domain.org;
    return 404; # managed by Certbot
}